apiVersion: apps/v1
kind: Deployment
metadata:
  name: prevent
  namespace: {{ .Release.Namespace }}
  labels:
    app: prevent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prevent
  template:
    metadata:
      labels:
        app: prevent
    spec:
      containers:
        - name: prevent
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          ports:
            - name: http
              containerPort: {{ .Values.pod.containerPort }}
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu | quote }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu | quote }}
              memory: {{ .Values.resources.limits.memory }}
          env:
            {{- include "env-secrets" (dict "secreteManagerType" .Values.app.config.secretManager) | indent 6 }}
            # todo move this logic into helpers
            # todo add support for local k8s secret manager
            # todo add configMap for "config flags" - user values file
            # todo check if I can unify the secret-keyref-required and secret-keyref-optional functions
          volumeMounts:
            - name: vol-prevent-configmap
              mountPath: /etc/prevent/prevent.conf
              subPath: prevent.conf
              readOnly: true
          {{- if eq .Values.app.config.secretManager "gcloud" }}
            - mountPath: /app/config/google-app-cred.json
              subPath: google-application-credentials-json
              name: google-app-cred-json-volume
          {{- end }}
      volumes:
        - name: vol-prevent-configmap
          configMap:
            name: prevent-configmap
        {{- if eq .Values.app.config.secretManager "gcloud" }}
        - name: google-app-cred-json-volume
          secret:
            secretName: gcloud-credentials
        {{- end }}
{{- if .Values.service.clusterIP.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: prevent
spec:
  type: ClusterIP
  selector:
    app: prevent
  ports:
    - name: http
      port: {{ .Values.service.port }}
      targetPort: {{ .Values.service.targetPort }}
{{- end }}
{{- if .Values.service.NodePort.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: prevent-nodeport
  {{- if .Values.service.NodePort.annotations }}
  annotations:
    {{- range .Values.service.NodePort.annotations }}
    {{ toYaml . }}
    {{- end }}
  {{- end }}
spec:
  type: NodePort
  selector:
    app: prevent
  ports:
    - name: http
      port: {{ .Values.service.port }}
      targetPort: {{ .Values.service.targetPort }}
{{- end }}